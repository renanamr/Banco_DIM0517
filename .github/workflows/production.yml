name: Production
run-name: Production
on:
  push:
    tags:    
      - 'rel-[0-9]+\.[0-9]+'

jobs:
  dependency-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Downloading server dependencies...
        run: pip install -r src/server/requirements.txt
      - name: Downloading client dependencies...  
        run: pip install -r src/client/requirements.txt
    
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build the back-end Docker image
      run: docker build . --file src/server/Dockerfile
    - name: Syntatic check for the front-end 
      run: python3 -m compileall -q src/client/.
    - name: Syntatic check for the back-end
      run: python3 -m compileall -q src/server/.

  qa:
    name: Run linters
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Install Python dependencies
        run: pip install black pylint

      - name: Run linters
        uses: wearerequired/lint-action@v2
        with:
          black: true
          pylint: true

  unit-testing:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: install pytest 
      run: pip install -r src/server/requirements.txt
    - name: unit testing
      run: PYTHONPATH=./src/server pytest
  
  release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Archive Release
      uses: thedoctor0/zip-release@0.7.1
      with:
        type: 'zip'
        filename: '${{ github.base.ref }}.zip'
        exclusions: '*.git* /*node_modules/* .editorconfig'
    - name: Upload Release
      uses: ncipollo/release-action@v1.12.0
      with:
        artifacts: "release.zip"
        token: ${{ secrets.GITHUB_TOKEN }}

  docker-build:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      
      - name: Check out code
        uses: actions/checkout@v3

      - name: Build and push
        run: |
          docker build . --file src/server/Dockerfile --tag renan084rocha/banco:${{ github.ref_name }}
          docker push renan084rocha/banco:${{ github.ref_name }}
    


